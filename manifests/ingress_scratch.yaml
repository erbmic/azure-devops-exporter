# ---
# kind: ClusterRole
# apiVersion: rbac.authorization.k8s.io/v1beta1
# metadata:
#   name: traefik-ingress-controller
# rules:
#   - apiGroups:
#       - ""
#     resources:
#       - services
#       - endpoints
#       - secrets
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#       - extensions
#     resources:
#       - ingresses
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#     - extensions
#     resources:
#     - ingresses/status
#     verbs:
#     - update
# ---
# kind: ClusterRoleBinding
# apiVersion: rbac.authorization.k8s.io/v1beta1
# metadata:
#   name: traefik-ingress-controller
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: traefik-ingress-controller
# subjects:
# - kind: ServiceAccount
#   name: traefik-ingress-controller
#   namespace: kube-system
# ---




# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-resource-backend
# spec:
#   defaultBackend:
#     resource:
#       apiGroup: k8s.example.com
#       kind: StorageBucket
#       name: static-assets
#   # rules:
#   #   - http:
#   #       paths:
#   #         - path: /icons
#   #           pathType: ImplementationSpecific
#   #           backend:
#   #             resource:
#   #               apiGroup: k8s.example.com
#   #               kind: StorageBucket
#   #               name: icon-assets
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: simple-fanout-example
# spec:
#   rules:
#   - host: foo.bar.com
#     http:
#       paths:
#       - path: /foo
#         pathType: Prefix
#         backend:
#           service:
#             name: grafana-service
#             port:
#               number: 3000
#       - path: /bar
#         pathType: Prefix
#         backend:
#           service:
#             name: prometheus-service
#             port:
#               number: 9090



# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-wildcard-host
# spec:
#   rules:
#   - host: "foo.bar.com"
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/bar"
#         backend:
#           service:
#             name: grafana-service
#             port:
#               number: 3000
#   - host: "*.foo.com"
#     http:
#       paths:
#       - pathType: Prefix
#         path: "/foo"
#         backend:
#           service:
#             name: prometheus-service
#             port:
#               number: 9090



# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: traefik-ingress
#   namespace: do
# ---
# kind: ClusterRole
# apiVersion: rbac.authorization.k8s.io/v1beta1
# metadata:
#   name: traefik-ingress
# rules:
#   - apiGroups:
#       - ""
#     resources:
#       - services
#       - endpoints
#       - secrets
#     verbs:
#       - get
#       - list
#       - watch
#   - apiGroups:
#       - extensions
#     resources:
#       - ingresses
#     verbs:
#       - get
#       - list
#       - watch
# ---
# kind: ClusterRoleBinding
# apiVersion: rbac.authorization.k8s.io/v1beta1
# metadata:
#   name: traefik-ingress
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: traefik-ingress
# subjects:
# - kind: ServiceAccount
#   name: traefik-ingress
#   namespace: do
# ---
# kind: Deployment
# apiVersion: apps/v1
# metadata:
#   name: traefik-ingress
#   namespace: do
#   labels:
#     k8s-app: traefik-ingress-lb
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       k8s-app: traefik-ingress-lb
#   template:
#     metadata:
#       labels:
#         k8s-app: traefik-ingress-lb
#         name: traefik-ingress-lb
#     spec:
#       serviceAccountName: traefik-ingress
#       terminationGracePeriodSeconds: 60
#       containers:
#       - image: traefik:1.7
#         name: traefik-ingress-lb
#         ports:
#         - name: grafana
#           containerPort: 3000
#         - name: prometheus
#           containerPort: 9090
#         args:
#         - --api
#         - --kubernetes
#         - --logLevel=INFO
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: traefik-ingress-service
#   namespace: do
# spec:
#   selector:
#     k8s-app: traefik-ingress-lb
#   ports:
#     - protocol: TCP
#       port: 3000
#       name: grafana
#     - protocol: TCP
#       port: 9090
#       name: prometheus

#   type: NodePort
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: traefik-web-ui
#   namespace: do
# spec:
#   selector:
#     k8s-app: traefik-ingress-lb
#   ports:
#   - name: web
#     port: 80
#     targetPort: 9090
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: traefik-web-ui
#   namespace: do
# spec:
#   rules:
#   - host: traefik-ui.minikube
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: traefik-web-ui
#           servicePort: web








---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: do
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: traefik-ingress-controller
  namespace: do
  labels:
    k8s-app: traefik-ingress-lb
spec:
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
      name: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:v1.7
        name: traefik-ingress-lb
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: admin
          containerPort: 8080
          hostPort: 8080
        securityContext:
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        args:
        - --api
        - --kubernetes
        - --logLevel=INFO
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: do
spec:
 type: LoadBalancer 
 selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 8080
      name: admin
























