# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

# Variables
variables:
  tag: '$(Build.BuildId)'
# - name: testerx
#   value: azure-devops-exporter
# - name: version
#   value: 1.0.0
# - name: onMain
#   value: $[eq(variables['Build.SourceBranch'], 'main')]
# - name: onRelease
#   value: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')]
# - name: dockerReleaseRegistryName
#   value: michaelerb
# - name: tag
#   value: '$(Build.BuildId)'
# - group: docker_hub_credentials


stages:
#Buiild Stage
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Login to docker registry
      inputs:
        containerRegistry: 'docker_registry'
        command: 'login'    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'docker_registry'
        repository: 'michaelerb/azure-devops-exporter'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.SourceVersion)

# ## Publish Artifacts pipeline code in addition to Build and Push          
#     - bash: echo Contents in System Default Working Directory; ls -R $(System.DefaultWorkingDirectory)        
#     - bash: echo Before copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)        
#     # Task-2: Copy files (Copy files from a source folder to target folder)
#     # Source Directory: $(System.DefaultWorkingDirectory)/kube-manifests
#     # Target Directory: $(Build.ArtifactStagingDirectory)
#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(System.DefaultWorkingDirectory)/manifests'
#         Contents: '**'
#         TargetFolder: '$(Build.ArtifactStagingDirectory)'
#         OverWrite: true
#     # List files from Build Artifact Staging Directory - After Copy
#     - bash: echo After copying to Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)  
#     # Task-3: Publish build artifacts (Publish build to Azure Pipelines)

    # - task: KubernetesManifest@0
    #   inputs:
    #     action: 'deploy'
    #     kubernetesServiceConnection: 'aks_monitoring'
    #     namespace: 'do'
    #     manifests: '$(Pipeline.Workspace)/manifests/azure-devops-exporter.yaml'



- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: do
    strategy:
      runOnce:
        deploy:
          steps:
          # - task: KubernetesManifest@0
          #   displayName: Create imagePullSecret
          #   inputs:
          #     action: createSecret
          #     secretName: $(imagePullSecret)
          #     dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          - bash: |
              echo After copying to Build Artifact Directory; ls $(Pipeline.Workspace)      
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              kubernetesServiceConnection: aks_monitoring
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/azure-exporter-deployment.yaml
              containers: |
                michaelerb/azure-devops-exporter:$(tag)


    
    
    