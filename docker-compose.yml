#version: '3.7'

volumes:
  grafana_data: {}

services:
 prometheus:
   image: prom/prometheus
   ports:
     - "9090:9090"
   restart: always
   volumes:
     - ./prometheus/config:/etc/prometheus/
     - ./prometheus/data:/prometheus
     #- /etc/localtime:/etc/localtime:ro
     #- /etc/timezone:/etc/timezone:ro
   command:
     - '--config.file=/etc/prometheus/prometheus.yml'
     - '--storage.tsdb.path=/prometheus'
     - '--web.console.templates=/etc/prometheus/consoles'
     - '--web.console.libraries=/etc/prometheus/console_libraries'
   networks:
     - monitoring-network

 azure-exporter:
   build: .
   ports:
     - "8080:8080"
   restart: always
   #env_file:
     #- C:\Users\ERMI2\.monitoring.env
     #- .env
   environment:
    #  - AZURE_DEVOPS_URL=https://azdo.corp.itsroot.biz
    #  - AZURE_DEVOPS_ACCESS_TOKEN=${AZDO_API_KEY}
     - AZURE_DEVOPS_ACCESS_TOKEN=wmxaowgtieqsllkug6woe774bjsenvs52j6zhzjav57l34tzifjq
     - AZURE_DEVOPS_ORGANISATION=michaelerb
     #- AZURE_DEVOPS_FILTER_AGENTPOOL=2
    #  - AZURE_DEVOPS_FILTER_AGENTPOOL=5
    #  - AZURE_DEVOPS_FILTER_AGENTPOOL=3
    #  - LIMIT_BUILD_HISTORY_DURATION=1000000h
    #  - LIMIT_RELEASE_HISTORY_DURATION=1000000h
    #  - LIMIT_PROJECT=10000
    #  - LIMIT_BUILDS_PER_PROJECT=100000
    #  - LIMIT_BUILDS_PER_DEFINITION=100000
    #  - LIMIT_RELEASES_PER_PROJECT=100000
    #  - LIMIT_RELEASES_PER_DEFINITION=100000
    #  - LIMIT_DEPLOYMENTS_PER_DEFINITION=100000
    #  - LIMIT_RELEASEDEFINITION_PER_PROJECT=100000
    #  - STATS_SUMMARY_MAX_AGE=1000000h
    #  - SCRAPE_TIME=1m
    #  - SCRAPE_TIME_LIVE=5s
   depends_on:
     - prometheus
   networks:
     - monitoring-network

 grafana:
   image: grafana/grafana
   # optional - just a test from a tutorial
   #environment:
    #GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
   ports:
     - "3000:3000"
   restart: always
   volumes:
     #- /etc/localtime:/etc/localtime:ro
     #- /etc/timezone:/etc/timezone:ro
     - grafana_data:/var/lib/grafana
     - ./grafana/provisioning/:/etc/grafana/provisioning/
   env_file:
     - ./grafana/config.monitoring
   depends_on:
     - azure-exporter
   networks:
     - monitoring-network

networks:
 monitoring-network:
  driver: bridge
