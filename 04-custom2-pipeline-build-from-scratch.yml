# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main
- feature/*
- fix/*
- test/*

resources:
- repo: self

variables:
- name: testerx
  value: azure-devops-exporter
- name: version
  value: 1.0.0
- name: onMain
  value: $[eq(variables['Build.SourceBranch'], 'main')]
- name: onRelease
  value: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')]
- name: dockerReleaseRegistryName
  value: michaelerb
- name: tag
  value: '$(Build.BuildId)'
- group: docker_hub_credentials

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - bash: |
        # determine tag
        tag=$(version)"-"$(Build.BuildNumber)
        registryHost=$(dockerReleaseRegistryName)

        # build
        imageName=$registryHost"/"azure-devops-exporter":"$tag
        echo $imageName
        docker build --no-cache -t $imageName .

        echo $(dh_credentials.password) | docker login --username $(dh_credentials.username) --password-stdin
        docker push $imageName
        docker logout $registryHost

        # push
        if [ $(onRelease) = True ] || [ $(onMain) = True ] ; then
        echo $(dh_credentials.password) | docker login $registryHost --username $(dh_credentials.username) --password-stdin
        docker push $imageName
        docker logout $registryHost
        fi

        # clean up
        docker rmi $imageName

- stage: deploy
    


# # Docker image and Azure Container Registry
# # Build a Docker image and push it to an Azure Container Registry.
# # https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# trigger:
# - main
# - feature/*
# - fix/*
# - test/*

# resources:
# - repo: self


# jobs:
# - job: BuildImage
#   displayName: Build
#   dependsOn: CreateResources
#   condition: or(succeeded(), ne(variables['Azure.CreateResources'], 'true'))

#   steps:
#   - task: Docker@2
#     displayName: Login to Docker Hub
#     inputs:
#       command: login
#       containerRegistry: 
#   - task: Docker@2
#     displayName: Build and Push
#     inputs:
#       command: buildAndPush
#       repository: michaelerb
#       tags: |
#         tag1
#         tag2
#   - task: Docker@2
#     displayName: 'Build Docker image'
#     inputs:
#       command: build
#       repository: michaelerb
#       tags: tag-x
#       arguments: --no-cache
#       imageName: 'michaelerb/azure-devops-exporter:0.x'
#       dockerFile: '**/Dockerfile'

#   - task: Docker@1
#     displayName: 'Push an image'
#     inputs:
#       azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
#       azureContainerRegistry: '$(ACR.FullName)'
#       imageName: '$(ACR.ImageName)'
#       command: push


