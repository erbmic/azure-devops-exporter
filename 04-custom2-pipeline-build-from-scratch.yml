# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

# Variables
variables:
#  tag: '$(Build.BuildId)'
- name: testerx
  value: azure-devops-exporter
- name: version
  value: 1.0.0
- name: onMain
  value: $[eq(variables['Build.SourceBranch'], 'main')]
- name: onRelease
  value: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')]
- name: dockerReleaseRegistryName
  value: michaelerb
- name: tag
  value: '$(Build.BuildId)'
- group: docker_hub_credentials


stages:
#Buiild Stage
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'docker_registry'
        command: 'login'    
    - task: Docker@2
      inputs:
        containerRegistry: 'docker_registry'
        repository: 'michaelerb/azure-devops-exporter'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.SourceVersion)
## Publish Artifacts pipeline code in addition to Build and Push          
    - bash: echo Contents in System Default Working Directory; ls -R $(System.DefaultWorkingDirectory)        
    - bash: echo Before copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)        
    # Task-2: Copy files (Copy files from a source folder to target folder)
    # Source Directory: $(System.DefaultWorkingDirectory)/kube-manifests
    # Target Directory: $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/kube-manifests'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    # List files from Build Artifact Staging Directory - After Copy
    - bash: echo After copying to Build Artifact Directory; ls -R $(System.DefaultWorkingDirectory)  
    # Task-3: Publish build artifacts (Publish build to Azure Pipelines)           

    
    